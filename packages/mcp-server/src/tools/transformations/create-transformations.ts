// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { asTextContentResult } from 'bem-ai-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import type { Metadata } from '../';
import BemSDK from 'bem-ai';

export const metadata: Metadata = {
  resource: 'transformations',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/v1-beta/transformations',
  operationId: 'createTransformations',
};

export const tool: Tool = {
  name: 'create_transformations',
  description:
    "Creates a batch of new transformations, each with a content and input type, and queues them up in bem's servers. Bem supports both `application/json` and `multipart/form-data` requests, where the latter is useful for large files.\n",
  inputSchema: {
    type: 'object',
    properties: {
      pipelineID: {
        type: 'string',
        description: 'ID of the desired pipeline to transform the input content. Generated by bem.',
      },
      transformations: {
        type: 'array',
        description: 'An array of objects containing all the transformations you want to create.',
        items: {
          type: 'object',
          properties: {
            inputContent: {
              type: 'string',
              description:
                'The file content you want to transform as a base64 URL-encoded string. If the `inputType` is `email`, this is equivalent to the raw  format returned by the Gmail API.\n',
            },
            inputType: {
              $ref: '#/$defs/input_type',
            },
            referenceID: {
              type: 'string',
              description:
                'The unique ID you use internally to refer to this data point. Upon successful transformation, we will return it to you with the transformed content, so you can associate inputs and outputs.\n',
            },
          },
          required: ['inputContent', 'inputType', 'referenceID'],
        },
      },
    },
    $defs: {
      input_type: {
        type: 'string',
        description: "The input type of the content you're sending for transformation.",
        enum: [
          'email',
          'pdf',
          'xlsx',
          'xls',
          'docx',
          'csv',
          'text',
          'json',
          'png',
          'jpeg',
          'heic',
          'heif',
          'webp',
          'html',
          'wav',
          'mp3',
          'm4a',
        ],
      },
    },
  },
};

export const handler = async (client: BemSDK, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  return asTextContentResult(await client.transformations.create(body));
};

export default { metadata, tool, handler };
